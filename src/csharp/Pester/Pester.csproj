<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFrameworks>net8.0;net462</TargetFrameworks>
    <LangVersion>latest</LangVersion>
    <RestorePackagesWithLockFile>true</RestorePackagesWithLockFile>
    <DebugType>embedded</DebugType>
  </PropertyGroup>

  <PropertyGroup>
    <DefineConstants>$(DefineConstants);PESTER</DefineConstants>
  </PropertyGroup>

  <!-- PowerShell 7.4.x is the oldest supported PowerShell version. That version is built using net8.0.  -->
  <ItemGroup Condition="'$(TargetFramework)' == 'net8.0'">
    <!-- Versions older than 7.4.6 have security vulnerabilities. -->
    <PackageReference Include="System.Management.Automation" Version="7.4.6" />
  </ItemGroup>

  <!-- Windows PowerShell 5.1 is the only Windows PowerShell that is still in support, and it is built using .NET Framework 4.5.2.
  But the oldest still supported OS on which WMF5.1 can be installed, is Windows 10 1607, which comes with .NET Framework 4.6.2. https://learn.microsoft.com/en-us/powershell/scripting/windows-powershell/wmf-overview?view=powershell-7.4#wmf-availability-across-windows-operating-systems
  https://learn.microsoft.com/en-us/dotnet/framework/migration-guide/versions-and-dependencies#net-framework-462
  .NET 4.6.2 is also the oldest supported version of .NET Framework (https://learn.microsoft.com/en-us/lifecycle/products/microsoft-net-framework)
  -->
  <ItemGroup Condition="'$(TargetFramework)' == 'net462'">
    <PackageReference Include="Microsoft.PowerShell.5.1.ReferenceAssemblies" Version="1.0.0" />

    <!-- To enable build support on unix. -->
    <PackageReference Include="Microsoft.NETFramework.ReferenceAssemblies" Version="1.0.0">
      <PrivateAssets>all</PrivateAssets>
      <IncludeAssets>runtime; build; native; contentfiles; analyzers</IncludeAssets>
    </PackageReference>
  </ItemGroup>

</Project>
